//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuickItem {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("QuickItem.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        internal static string Button_Cancel {
            get {
                return ResourceManager.GetString("Button_Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm.
        /// </summary>
        internal static string Button_Confirm {
            get {
                return ResourceManager.GetString("Button_Confirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete this group.
        /// </summary>
        internal static string ContextMenu_Group_Delete {
            get {
                return ResourceManager.GetString("ContextMenu_Group_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit groups....
        /// </summary>
        internal static string ContextMenu_Group_EditGroups {
            get {
                return ResourceManager.GetString("ContextMenu_Group_EditGroups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete this item.
        /// </summary>
        internal static string ContextMenu_Item_Delete {
            get {
                return ResourceManager.GetString("ContextMenu_Item_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit this item....
        /// </summary>
        internal static string ContextMenu_Item_EditItem {
            get {
                return ResourceManager.GetString("ContextMenu_Item_EditItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit layouts....
        /// </summary>
        internal static string ContextMenu_Layout_EditLayouts {
            get {
                return ResourceManager.GetString("ContextMenu_Layout_EditLayouts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading....
        /// </summary>
        internal static string CornerIcon_Loading {
            get {
                return ResourceManager.GetString("CornerIcon_Loading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quick items.
        /// </summary>
        internal static string CornerIcon_Name {
            get {
                return ResourceManager.GetString("CornerIcon_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quick items lets you put shortcuts to your inventory items anywhere on your screen.
        ///It does this by opening your inventory, looking (without scrolling) in your inventory, finding the item, and double clicking the item.
        ///
        ///Quick items involves 3 parts:
        ///    1. Items. Each item corresponds to an item in your inventory.
        ///    2. Groups. Made up of several items together. Allow easy movement of related items together. 
        ///        Ex: group together your food and utility items together.
        ///    3. Layouts. Made up of [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string InfoTab_Text {
            get {
                return ResourceManager.GetString("InfoTab_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set Item.
        /// </summary>
        internal static string ItemContextMenu_SetItem {
            get {
                return ResourceManager.GetString("ItemContextMenu_SetItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter item name to search.
        /// </summary>
        internal static string ItemEdit_DefaultNameLabel {
            get {
                return ResourceManager.GetString("ItemEdit_DefaultNameLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optionally set a keybind to activate this item.
        /// </summary>
        internal static string ItemEdit_Settings_Keybind_Description {
            get {
                return ResourceManager.GetString("ItemEdit_Settings_Keybind_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keybind.
        /// </summary>
        internal static string ItemEdit_Settings_Keybind_Name {
            get {
                return ResourceManager.GetString("ItemEdit_Settings_Keybind_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open configuration window.
        /// </summary>
        internal static string ModuleSettings_OpenManagementWindow {
            get {
                return ResourceManager.GetString("ModuleSettings_OpenManagementWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t find the item.
        /// </summary>
        internal static string Notification_CantFindItem {
            get {
                return ResourceManager.GetString("Notification_CantFindItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose what action will activate the item. Single click may result in accidential activation..
        /// </summary>
        internal static string Settings_ActivationTrigger_Description {
            get {
                return ResourceManager.GetString("Settings_ActivationTrigger_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Item activation trigger.
        /// </summary>
        internal static string Settings_ActivationTrigger_Name {
            get {
                return ResourceManager.GetString("Settings_ActivationTrigger_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name of the active layout. .
        /// </summary>
        internal static string Settings_ActiveLayout_Description {
            get {
                return ResourceManager.GetString("Settings_ActiveLayout_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Active Layout.
        /// </summary>
        internal static string Settings_ActiveLayout_Name {
            get {
                return ResourceManager.GetString("Settings_ActiveLayout_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set this to the same keybind that you use in GW2. Default: i.
        /// </summary>
        internal static string Settings_InventoryKeybind_Description {
            get {
                return ResourceManager.GetString("Settings_InventoryKeybind_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inventory keybind.
        /// </summary>
        internal static string Settings_InventoryKeybind_Name {
            get {
                return ResourceManager.GetString("Settings_InventoryKeybind_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled, debug images will be written to the &quot;debug&quot; folder under this module&apos;s &quot;quickitems&quot; folder (accessed from the gears menu on the module settings page)..
        /// </summary>
        internal static string Settings_OutputDebugImages_Description {
            get {
                return ResourceManager.GetString("Settings_OutputDebugImages_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output debug images.
        /// </summary>
        internal static string Settings_OutputDebugImages_Name {
            get {
                return ResourceManager.GetString("Settings_OutputDebugImages_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Threshold for when an item is considered found when searching. Smaller values will have fewer false positives, but may reject valid items. Larger values will be more tolerant, but may introduce false positives.
        ///Min: 0.01
        ///Default: 0.10
        ///Max: 0.20.
        /// </summary>
        internal static string Settings_SearchAcceptThreshold_Description {
            get {
                return ResourceManager.GetString("Settings_SearchAcceptThreshold_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search threshold.
        /// </summary>
        internal static string Settings_SearchAcceptThreshold_Name {
            get {
                return ResourceManager.GetString("Settings_SearchAcceptThreshold_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scale (as a %) down the image when searching to improve search performance. Smaller values may make the search inaccurate (fail to find the item or finds the wrong item). Larger values will make the search slower.
        ///Min: 0.30
        ///Default: 0.50
        ///Max: 1.00.
        /// </summary>
        internal static string Settings_SearchImageScale_Description {
            get {
                return ResourceManager.GetString("Settings_SearchImageScale_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search image scale.
        /// </summary>
        internal static string Settings_SearchImageScale_Name {
            get {
                return ResourceManager.GetString("Settings_SearchImageScale_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When searching for the item on screen, everything is converted to grayscale to improve performance. This setting changes how the item is converted to grayscale.
        ///- ToGray: Default. Images are converted to grayscale based on how bright the image is. Works for most items as long as they have unique illustrations.
        ///- ToGrayWithMeanHueCheck: Same as ToGray, but the result is further checked to make sure that its average hue matches the target item. Use this mode for items that have multiple other similar items  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Settings_SearchMode_Description {
            get {
                return ResourceManager.GetString("Settings_SearchMode_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search mode.
        /// </summary>
        internal static string Settings_SearchMode_Name {
            get {
                return ResourceManager.GetString("Settings_SearchMode_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show corner icon for quick access to the config screen in the bar in the upper left corner of the screen.
        /// </summary>
        internal static string Settings_ShowCornerIcon_Description {
            get {
                return ResourceManager.GetString("Settings_ShowCornerIcon_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show corner icon.
        /// </summary>
        internal static string Settings_ShowCornerIcon_Name {
            get {
                return ResourceManager.GetString("Settings_ShowCornerIcon_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show item icons during combat..
        /// </summary>
        internal static string Settings_ShowInCombat_Description {
            get {
                return ResourceManager.GetString("Settings_ShowInCombat_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show in combat.
        /// </summary>
        internal static string Settings_ShowInCombat_Name {
            get {
                return ResourceManager.GetString("Settings_ShowInCombat_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show item icons on loading screen, character select, and in cutscenes..
        /// </summary>
        internal static string Settings_ShowOnLoadingScreen_Description {
            get {
                return ResourceManager.GetString("Settings_ShowOnLoadingScreen_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show on loading screen.
        /// </summary>
        internal static string Settings_ShowOnLoadingScreen_Name {
            get {
                return ResourceManager.GetString("Settings_ShowOnLoadingScreen_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show item icons when the world map is open..
        /// </summary>
        internal static string Settings_ShowOnMap_Description {
            get {
                return ResourceManager.GetString("Settings_ShowOnMap_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show when map open.
        /// </summary>
        internal static string Settings_ShowOnMap_Name {
            get {
                return ResourceManager.GetString("Settings_ShowOnMap_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time to wait for inventory to open before attempting to click on the item. Leave as default unless your inventory opens particularly slow.
        ///Min: 100ms
        ///Default: 300ms
        ///Max: 1000ms.
        /// </summary>
        internal static string Settings_WaitForInventoryOpen_Description {
            get {
                return ResourceManager.GetString("Settings_WaitForInventoryOpen_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wait for inventory open.
        /// </summary>
        internal static string Settings_WaitForInventoryOpen_Name {
            get {
                return ResourceManager.GetString("Settings_WaitForInventoryOpen_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Groups.
        /// </summary>
        internal static string SettingsWindow_GroupsTabName {
            get {
                return ResourceManager.GetString("SettingsWindow_GroupsTabName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Info.
        /// </summary>
        internal static string SettingsWindow_InfoTabName {
            get {
                return ResourceManager.GetString("SettingsWindow_InfoTabName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Layouts.
        /// </summary>
        internal static string SettingsWindow_LayoutsTabName {
            get {
                return ResourceManager.GetString("SettingsWindow_LayoutsTabName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        internal static string SettingsWindow_SettingsTabName {
            get {
                return ResourceManager.GetString("SettingsWindow_SettingsTabName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quick items settings.
        /// </summary>
        internal static string SettingsWindow_Title {
            get {
                return ResourceManager.GetString("SettingsWindow_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current: .
        /// </summary>
        internal static string SettingView_CurrentValue {
            get {
                return ResourceManager.GetString("SettingView_CurrentValue", resourceCulture);
            }
        }
    }
}
